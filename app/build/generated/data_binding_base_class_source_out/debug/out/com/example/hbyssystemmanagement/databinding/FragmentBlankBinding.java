// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hbyssystemmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBlankBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bmi;

  @NonNull
  public final EditText heigh;

  @NonNull
  public final Button help;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final EditText weig;

  private FragmentBlankBinding(@NonNull ConstraintLayout rootView, @NonNull Button bmi,
      @NonNull EditText heigh, @NonNull Button help, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull EditText weig) {
    this.rootView = rootView;
    this.bmi = bmi;
    this.heigh = heigh;
    this.help = help;
    this.textView = textView;
    this.textView2 = textView2;
    this.weig = weig;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBlankBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBlankBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_blank, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBlankBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bmi;
      Button bmi = ViewBindings.findChildViewById(rootView, id);
      if (bmi == null) {
        break missingId;
      }

      id = R.id.heigh;
      EditText heigh = ViewBindings.findChildViewById(rootView, id);
      if (heigh == null) {
        break missingId;
      }

      id = R.id.help;
      Button help = ViewBindings.findChildViewById(rootView, id);
      if (help == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.weig;
      EditText weig = ViewBindings.findChildViewById(rootView, id);
      if (weig == null) {
        break missingId;
      }

      return new FragmentBlankBinding((ConstraintLayout) rootView, bmi, heigh, help, textView,
          textView2, weig);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
