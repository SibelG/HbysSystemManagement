// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hbyssystemmanagement.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySendMessageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout mainActivityTextContainer;

  @NonNull
  public final TextInputLayout passwordWrapper;

  @NonNull
  public final ImageView sendMessageButton;

  @NonNull
  public final RecyclerView sendRecyclerView;

  @NonNull
  public final EditText sendText;

  private ActivitySendMessageBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout mainActivityTextContainer, @NonNull TextInputLayout passwordWrapper,
      @NonNull ImageView sendMessageButton, @NonNull RecyclerView sendRecyclerView,
      @NonNull EditText sendText) {
    this.rootView = rootView;
    this.mainActivityTextContainer = mainActivityTextContainer;
    this.passwordWrapper = passwordWrapper;
    this.sendMessageButton = sendMessageButton;
    this.sendRecyclerView = sendRecyclerView;
    this.sendText = sendText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySendMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySendMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_send_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySendMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mainActivityTextContainer;
      LinearLayout mainActivityTextContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainActivityTextContainer == null) {
        break missingId;
      }

      id = R.id.passwordWrapper;
      TextInputLayout passwordWrapper = ViewBindings.findChildViewById(rootView, id);
      if (passwordWrapper == null) {
        break missingId;
      }

      id = R.id.sendMessageButton;
      ImageView sendMessageButton = ViewBindings.findChildViewById(rootView, id);
      if (sendMessageButton == null) {
        break missingId;
      }

      id = R.id.sendRecyclerView;
      RecyclerView sendRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (sendRecyclerView == null) {
        break missingId;
      }

      id = R.id.sendText;
      EditText sendText = ViewBindings.findChildViewById(rootView, id);
      if (sendText == null) {
        break missingId;
      }

      return new ActivitySendMessageBinding((RelativeLayout) rootView, mainActivityTextContainer,
          passwordWrapper, sendMessageButton, sendRecyclerView, sendText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
