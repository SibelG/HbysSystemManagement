// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hbyssystemmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppointmentViewItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView appDate;

  @NonNull
  public final TextView appDoctorName;

  @NonNull
  public final TextView appDoktorSection;

  @NonNull
  public final TextView appTime;

  @NonNull
  public final Button detail;

  @NonNull
  public final Button direction;

  @NonNull
  public final Button edit;

  @NonNull
  public final Button remove;

  private AppointmentViewItemBinding(@NonNull LinearLayout rootView, @NonNull TextView appDate,
      @NonNull TextView appDoctorName, @NonNull TextView appDoktorSection,
      @NonNull TextView appTime, @NonNull Button detail, @NonNull Button direction,
      @NonNull Button edit, @NonNull Button remove) {
    this.rootView = rootView;
    this.appDate = appDate;
    this.appDoctorName = appDoctorName;
    this.appDoktorSection = appDoktorSection;
    this.appTime = appTime;
    this.detail = detail;
    this.direction = direction;
    this.edit = edit;
    this.remove = remove;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppointmentViewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppointmentViewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.appointment_view_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppointmentViewItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appDate;
      TextView appDate = ViewBindings.findChildViewById(rootView, id);
      if (appDate == null) {
        break missingId;
      }

      id = R.id.appDoctorName;
      TextView appDoctorName = ViewBindings.findChildViewById(rootView, id);
      if (appDoctorName == null) {
        break missingId;
      }

      id = R.id.appDoktorSection;
      TextView appDoktorSection = ViewBindings.findChildViewById(rootView, id);
      if (appDoktorSection == null) {
        break missingId;
      }

      id = R.id.appTime;
      TextView appTime = ViewBindings.findChildViewById(rootView, id);
      if (appTime == null) {
        break missingId;
      }

      id = R.id.detail;
      Button detail = ViewBindings.findChildViewById(rootView, id);
      if (detail == null) {
        break missingId;
      }

      id = R.id.direction;
      Button direction = ViewBindings.findChildViewById(rootView, id);
      if (direction == null) {
        break missingId;
      }

      id = R.id.edit;
      Button edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.remove;
      Button remove = ViewBindings.findChildViewById(rootView, id);
      if (remove == null) {
        break missingId;
      }

      return new AppointmentViewItemBinding((LinearLayout) rootView, appDate, appDoctorName,
          appDoktorSection, appTime, detail, direction, edit, remove);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
