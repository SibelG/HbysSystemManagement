// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hbyssystemmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddressLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Address;

  @NonNull
  public final TextView Name;

  @NonNull
  public final TextView Phone;

  @NonNull
  public final RadioButton homeAddress;

  @NonNull
  public final RadioButton newAddress;

  private AddressLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView Address,
      @NonNull TextView Name, @NonNull TextView Phone, @NonNull RadioButton homeAddress,
      @NonNull RadioButton newAddress) {
    this.rootView = rootView;
    this.Address = Address;
    this.Name = Name;
    this.Phone = Phone;
    this.homeAddress = homeAddress;
    this.newAddress = newAddress;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddressLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddressLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.address_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddressLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Address;
      TextView Address = ViewBindings.findChildViewById(rootView, id);
      if (Address == null) {
        break missingId;
      }

      id = R.id.Name;
      TextView Name = ViewBindings.findChildViewById(rootView, id);
      if (Name == null) {
        break missingId;
      }

      id = R.id.Phone;
      TextView Phone = ViewBindings.findChildViewById(rootView, id);
      if (Phone == null) {
        break missingId;
      }

      id = R.id.homeAddress;
      RadioButton homeAddress = ViewBindings.findChildViewById(rootView, id);
      if (homeAddress == null) {
        break missingId;
      }

      id = R.id.newAddress;
      RadioButton newAddress = ViewBindings.findChildViewById(rootView, id);
      if (newAddress == null) {
        break missingId;
      }

      return new AddressLayoutBinding((LinearLayout) rootView, Address, Name, Phone, homeAddress,
          newAddress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
