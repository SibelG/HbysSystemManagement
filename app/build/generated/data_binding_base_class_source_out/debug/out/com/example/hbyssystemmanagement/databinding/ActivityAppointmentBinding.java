// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hbyssystemmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAppointmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Toolbar appointmentToolbar;

  @NonNull
  public final TextView bookAppointmentSelectDate;

  @NonNull
  public final TextView bookAppointmentSelectedDate;

  @NonNull
  public final Button confirmAppointment;

  @NonNull
  public final LinearLayout eveningShift;

  @NonNull
  public final LinearLayout morningShift;

  @NonNull
  public final CardView time1;

  @NonNull
  public final CardView time10;

  @NonNull
  public final CardView time11;

  @NonNull
  public final CardView time12;

  @NonNull
  public final CardView time13;

  @NonNull
  public final CardView time14;

  @NonNull
  public final CardView time15;

  @NonNull
  public final CardView time16;

  @NonNull
  public final CardView time17;

  @NonNull
  public final CardView time18;

  @NonNull
  public final CardView time19;

  @NonNull
  public final CardView time2;

  @NonNull
  public final CardView time20;

  @NonNull
  public final CardView time21;

  @NonNull
  public final CardView time22;

  @NonNull
  public final CardView time23;

  @NonNull
  public final CardView time24;

  @NonNull
  public final CardView time25;

  @NonNull
  public final CardView time26;

  @NonNull
  public final CardView time27;

  @NonNull
  public final CardView time28;

  @NonNull
  public final CardView time29;

  @NonNull
  public final CardView time3;

  @NonNull
  public final CardView time30;

  @NonNull
  public final CardView time4;

  @NonNull
  public final CardView time5;

  @NonNull
  public final CardView time6;

  @NonNull
  public final CardView time7;

  @NonNull
  public final CardView time8;

  @NonNull
  public final CardView time9;

  private ActivityAppointmentBinding(@NonNull LinearLayout rootView,
      @NonNull Toolbar appointmentToolbar, @NonNull TextView bookAppointmentSelectDate,
      @NonNull TextView bookAppointmentSelectedDate, @NonNull Button confirmAppointment,
      @NonNull LinearLayout eveningShift, @NonNull LinearLayout morningShift,
      @NonNull CardView time1, @NonNull CardView time10, @NonNull CardView time11,
      @NonNull CardView time12, @NonNull CardView time13, @NonNull CardView time14,
      @NonNull CardView time15, @NonNull CardView time16, @NonNull CardView time17,
      @NonNull CardView time18, @NonNull CardView time19, @NonNull CardView time2,
      @NonNull CardView time20, @NonNull CardView time21, @NonNull CardView time22,
      @NonNull CardView time23, @NonNull CardView time24, @NonNull CardView time25,
      @NonNull CardView time26, @NonNull CardView time27, @NonNull CardView time28,
      @NonNull CardView time29, @NonNull CardView time3, @NonNull CardView time30,
      @NonNull CardView time4, @NonNull CardView time5, @NonNull CardView time6,
      @NonNull CardView time7, @NonNull CardView time8, @NonNull CardView time9) {
    this.rootView = rootView;
    this.appointmentToolbar = appointmentToolbar;
    this.bookAppointmentSelectDate = bookAppointmentSelectDate;
    this.bookAppointmentSelectedDate = bookAppointmentSelectedDate;
    this.confirmAppointment = confirmAppointment;
    this.eveningShift = eveningShift;
    this.morningShift = morningShift;
    this.time1 = time1;
    this.time10 = time10;
    this.time11 = time11;
    this.time12 = time12;
    this.time13 = time13;
    this.time14 = time14;
    this.time15 = time15;
    this.time16 = time16;
    this.time17 = time17;
    this.time18 = time18;
    this.time19 = time19;
    this.time2 = time2;
    this.time20 = time20;
    this.time21 = time21;
    this.time22 = time22;
    this.time23 = time23;
    this.time24 = time24;
    this.time25 = time25;
    this.time26 = time26;
    this.time27 = time27;
    this.time28 = time28;
    this.time29 = time29;
    this.time3 = time3;
    this.time30 = time30;
    this.time4 = time4;
    this.time5 = time5;
    this.time6 = time6;
    this.time7 = time7;
    this.time8 = time8;
    this.time9 = time9;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAppointmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAppointmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_appointment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAppointmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointmentToolbar;
      Toolbar appointmentToolbar = ViewBindings.findChildViewById(rootView, id);
      if (appointmentToolbar == null) {
        break missingId;
      }

      id = R.id.bookAppointment_selectDate;
      TextView bookAppointmentSelectDate = ViewBindings.findChildViewById(rootView, id);
      if (bookAppointmentSelectDate == null) {
        break missingId;
      }

      id = R.id.bookAppointment_selectedDate;
      TextView bookAppointmentSelectedDate = ViewBindings.findChildViewById(rootView, id);
      if (bookAppointmentSelectedDate == null) {
        break missingId;
      }

      id = R.id.confirm_appointment;
      Button confirmAppointment = ViewBindings.findChildViewById(rootView, id);
      if (confirmAppointment == null) {
        break missingId;
      }

      id = R.id.evening_shift;
      LinearLayout eveningShift = ViewBindings.findChildViewById(rootView, id);
      if (eveningShift == null) {
        break missingId;
      }

      id = R.id.morning_shift;
      LinearLayout morningShift = ViewBindings.findChildViewById(rootView, id);
      if (morningShift == null) {
        break missingId;
      }

      id = R.id.time1;
      CardView time1 = ViewBindings.findChildViewById(rootView, id);
      if (time1 == null) {
        break missingId;
      }

      id = R.id.time10;
      CardView time10 = ViewBindings.findChildViewById(rootView, id);
      if (time10 == null) {
        break missingId;
      }

      id = R.id.time11;
      CardView time11 = ViewBindings.findChildViewById(rootView, id);
      if (time11 == null) {
        break missingId;
      }

      id = R.id.time12;
      CardView time12 = ViewBindings.findChildViewById(rootView, id);
      if (time12 == null) {
        break missingId;
      }

      id = R.id.time13;
      CardView time13 = ViewBindings.findChildViewById(rootView, id);
      if (time13 == null) {
        break missingId;
      }

      id = R.id.time14;
      CardView time14 = ViewBindings.findChildViewById(rootView, id);
      if (time14 == null) {
        break missingId;
      }

      id = R.id.time15;
      CardView time15 = ViewBindings.findChildViewById(rootView, id);
      if (time15 == null) {
        break missingId;
      }

      id = R.id.time16;
      CardView time16 = ViewBindings.findChildViewById(rootView, id);
      if (time16 == null) {
        break missingId;
      }

      id = R.id.time17;
      CardView time17 = ViewBindings.findChildViewById(rootView, id);
      if (time17 == null) {
        break missingId;
      }

      id = R.id.time18;
      CardView time18 = ViewBindings.findChildViewById(rootView, id);
      if (time18 == null) {
        break missingId;
      }

      id = R.id.time19;
      CardView time19 = ViewBindings.findChildViewById(rootView, id);
      if (time19 == null) {
        break missingId;
      }

      id = R.id.time2;
      CardView time2 = ViewBindings.findChildViewById(rootView, id);
      if (time2 == null) {
        break missingId;
      }

      id = R.id.time20;
      CardView time20 = ViewBindings.findChildViewById(rootView, id);
      if (time20 == null) {
        break missingId;
      }

      id = R.id.time21;
      CardView time21 = ViewBindings.findChildViewById(rootView, id);
      if (time21 == null) {
        break missingId;
      }

      id = R.id.time22;
      CardView time22 = ViewBindings.findChildViewById(rootView, id);
      if (time22 == null) {
        break missingId;
      }

      id = R.id.time23;
      CardView time23 = ViewBindings.findChildViewById(rootView, id);
      if (time23 == null) {
        break missingId;
      }

      id = R.id.time24;
      CardView time24 = ViewBindings.findChildViewById(rootView, id);
      if (time24 == null) {
        break missingId;
      }

      id = R.id.time25;
      CardView time25 = ViewBindings.findChildViewById(rootView, id);
      if (time25 == null) {
        break missingId;
      }

      id = R.id.time26;
      CardView time26 = ViewBindings.findChildViewById(rootView, id);
      if (time26 == null) {
        break missingId;
      }

      id = R.id.time27;
      CardView time27 = ViewBindings.findChildViewById(rootView, id);
      if (time27 == null) {
        break missingId;
      }

      id = R.id.time28;
      CardView time28 = ViewBindings.findChildViewById(rootView, id);
      if (time28 == null) {
        break missingId;
      }

      id = R.id.time29;
      CardView time29 = ViewBindings.findChildViewById(rootView, id);
      if (time29 == null) {
        break missingId;
      }

      id = R.id.time3;
      CardView time3 = ViewBindings.findChildViewById(rootView, id);
      if (time3 == null) {
        break missingId;
      }

      id = R.id.time30;
      CardView time30 = ViewBindings.findChildViewById(rootView, id);
      if (time30 == null) {
        break missingId;
      }

      id = R.id.time4;
      CardView time4 = ViewBindings.findChildViewById(rootView, id);
      if (time4 == null) {
        break missingId;
      }

      id = R.id.time5;
      CardView time5 = ViewBindings.findChildViewById(rootView, id);
      if (time5 == null) {
        break missingId;
      }

      id = R.id.time6;
      CardView time6 = ViewBindings.findChildViewById(rootView, id);
      if (time6 == null) {
        break missingId;
      }

      id = R.id.time7;
      CardView time7 = ViewBindings.findChildViewById(rootView, id);
      if (time7 == null) {
        break missingId;
      }

      id = R.id.time8;
      CardView time8 = ViewBindings.findChildViewById(rootView, id);
      if (time8 == null) {
        break missingId;
      }

      id = R.id.time9;
      CardView time9 = ViewBindings.findChildViewById(rootView, id);
      if (time9 == null) {
        break missingId;
      }

      return new ActivityAppointmentBinding((LinearLayout) rootView, appointmentToolbar,
          bookAppointmentSelectDate, bookAppointmentSelectedDate, confirmAppointment, eveningShift,
          morningShift, time1, time10, time11, time12, time13, time14, time15, time16, time17,
          time18, time19, time2, time20, time21, time22, time23, time24, time25, time26, time27,
          time28, time29, time3, time30, time4, time5, time6, time7, time8, time9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
