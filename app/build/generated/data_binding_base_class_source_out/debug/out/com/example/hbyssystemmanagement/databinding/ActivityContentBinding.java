// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.daimajia.slider.library.SliderLayout;
import com.example.hbyssystemmanagement.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final Toolbar myToolbar;

  @NonNull
  public final RecyclerView recyclerSection;

  @NonNull
  public final SliderLayout sliderSection;

  @NonNull
  public final CoordinatorLayout swipeLayout;

  private ActivityContentBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull Toolbar myToolbar, @NonNull RecyclerView recyclerSection,
      @NonNull SliderLayout sliderSection, @NonNull CoordinatorLayout swipeLayout) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.myToolbar = myToolbar;
    this.recyclerSection = recyclerSection;
    this.sliderSection = sliderSection;
    this.swipeLayout = swipeLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.myToolbar;
      Toolbar myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }

      id = R.id.recyclerSection;
      RecyclerView recyclerSection = ViewBindings.findChildViewById(rootView, id);
      if (recyclerSection == null) {
        break missingId;
      }

      id = R.id.sliderSection;
      SliderLayout sliderSection = ViewBindings.findChildViewById(rootView, id);
      if (sliderSection == null) {
        break missingId;
      }

      CoordinatorLayout swipeLayout = (CoordinatorLayout) rootView;

      return new ActivityContentBinding((CoordinatorLayout) rootView, appbar, myToolbar,
          recyclerSection, sliderSection, swipeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
