// Generated by view binder compiler. Do not edit!
package com.example.hbyssystemmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hbyssystemmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVisitedPlacesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final Button directions;

  @NonNull
  public final EditText placeNameText;

  @NonNull
  public final ConstraintLayout rootLayout;

  @NonNull
  public final Button saveButton;

  private ActivityVisitedPlacesBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button deleteButton, @NonNull Button directions, @NonNull EditText placeNameText,
      @NonNull ConstraintLayout rootLayout, @NonNull Button saveButton) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.directions = directions;
    this.placeNameText = placeNameText;
    this.rootLayout = rootLayout;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVisitedPlacesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVisitedPlacesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_visited_places, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVisitedPlacesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.directions;
      Button directions = ViewBindings.findChildViewById(rootView, id);
      if (directions == null) {
        break missingId;
      }

      id = R.id.placeNameText;
      EditText placeNameText = ViewBindings.findChildViewById(rootView, id);
      if (placeNameText == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new ActivityVisitedPlacesBinding((ConstraintLayout) rootView, deleteButton, directions,
          placeNameText, rootLayout, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
